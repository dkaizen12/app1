1. Assurez-vous que Flutter est installé et configuré correctement sur votre machine. 
Vous pouvez vérifier cela en exécutant `flutter doctor` dans votre terminal.
2. Créez un nouveau projet Flutter si ce n'est pas encore fait :
    ```
    flutter create app1
    ```
3. Naviguez dans le répertoire du projet :
    ```
    cd app1
    ```
4. Ouvrez le fichier `lib/main.dart` dans votre éditeur de code préféré 
  (par exemple, Visual Studio Code ou Android Studio).

5. Modifiez ou créez le fichier `main.dart` avec le code suivant pour une application Flutter de base :
    ```dart
    import 'package:flutter/material.dart';

    void main() {
      runApp(const MyApp());
    }

    class MyApp extends StatelessWidget {
      const MyApp({super.key});

      @override
      Widget build(BuildContext context) {
         return MaterialApp(
            title: 'Flutter Demo',
            theme: ThemeData(
              primarySwatch: Colors.blue,
            ),
            home: const MyHomePage(),
         );
      }
    }

    class MyHomePage extends StatelessWidget {
      const MyHomePage({super.key});

      @override
      Widget build(BuildContext context) {
         return Scaffold(
            appBar: AppBar(
              title: const Text('Flutter Home Page'),
            ),
            body: const Center(
              child: Text('Hello, Flutter!'),
            ),
         );
      }
    }
    ```
6. Enregistrez le fichier.
7. Lancez l'application sur un émulateur ou un appareil physique connecté :
    ```
    flutter run
    ```
8. Si tout est configuré correctement, vous verrez l'application Flutter s'exécuter avec un écran affichant 
  "Hello, Flutter!".
  https://github.com/quarkusio/quarkus-super-heroes
  https://github.com/redhat-mw-demos/hello-world-spring-openjdk
  https://github.com/jboss-developer/jboss-eap-quickstarts/tree/7.4.x/helloworld-rs 