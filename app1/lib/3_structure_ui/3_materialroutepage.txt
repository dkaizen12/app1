### ‚úÖ Exemple complet d'utilisation de `MaterialPageRoute`

```dart
import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

/// Application Flutter avec Material Design
class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'MaterialPageRoute Demo',
      debugShowCheckedModeBanner: false,
      theme: ThemeData(primarySwatch: Colors.blue),
      home: const HomePage(),
    );
  }
}

/// Page d'accueil de l'application
class HomePage extends StatelessWidget {
  const HomePage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text("Accueil")),
      body: Center(
        child: ElevatedButton(
          child: const Text("Aller √† la page suivante"),
          onPressed: () {
            Navigator.of(context).push(
              MaterialPageRoute<String>(
                builder: (context) => const SecondPage(),
                settings: const RouteSettings(
                  name: "/second",
                  arguments: "Donn√©es optionnelles",
                ),
                fullscreenDialog: true, // Effet "dialogue plein √©cran" sur iOS
                maintainState: true, // Laisse l‚Äô√©tat en m√©moire
                // barrierDismissible: true, // Utile si Modal, sinon sans effet ici
              ),
            );
          },
        ),
      ),
    );
  }
}

/// Deuxi√®me page √† afficher via MaterialPageRoute
class SecondPage extends StatelessWidget {
  const SecondPage({super.key});

  @override
  Widget build(BuildContext context) {
    // R√©cup√®re les donn√©es envoy√©es via settings.arguments
    final route = ModalRoute.of(context);
    final arguments = route?.settings.arguments;

    return Scaffold(
      appBar: AppBar(
        title: const Text("Page 2"),
        automaticallyImplyLeading: true, // Affiche le bouton de retour
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Text("Bienvenue sur la page 2 !"),
            const SizedBox(height: 20),
            Text("Arguments re√ßus : $arguments"),
            const SizedBox(height: 40),
            ElevatedButton(
              onPressed: () {
                // Retour en envoyant une valeur de retour
                Navigator.pop(context, "Retour depuis page 2");
              },
              child: const Text("Retour avec r√©sultat"),
            ),
          ],
        ),
      ),
    );
  }
}
```

---

### üìå Propri√©t√©s de `MaterialPageRoute` utilis√©es ici

| Propri√©t√©            | Effet                                                          |
| -------------------- | -------------------------------------------------------------- |
| `builder`            | Obligatoire, retourne le widget de destination                 |
| `settings`           | D√©finit un nom de route et des arguments (`RouteSettings`)     |
| `fullscreenDialog`   | Change la transition iOS pour un effet "dialogue plein √©cran"  |
| `maintainState`      | Maintient l‚Äô√©tat de la page m√™me si elle est masqu√©e           |
| `barrierDismissible` | (utile pour un `ModalRoute`) permet de fermer en tapant √† c√¥t√© |

---

### üí° Astuce

Tu peux aussi utiliser `.then((value) => ...)` pour r√©cup√©rer le r√©sultat envoy√© par `Navigator.pop(...)` :

```dart
Navigator.of(context).push(...).then((result) {
  print("R√©sultat : $result");
});
```

Super‚ÄØ! Voici un **exemple complet en Flutter** qui montre comment cr√©er une **transition personnalis√©e entre deux pages** en utilisant **`PageRouteBuilder`** au lieu de `MaterialPageRoute`. Tu pourras ainsi contr√¥ler la **dur√©e**, **la courbe d‚Äôanimation**, et **l‚Äôeffet de transition** (slide, fade, scale, rotation, etc.).

---

## ‚úÖ Exemple avec `PageRouteBuilder` (transition personnalis√©e)

```dart
import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

/// üåü Application principale
class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Custom Route Demo',
      debugShowCheckedModeBanner: false,
      home: const HomePage(),
    );
  }
}

/// üè† Page d'accueil avec bouton de navigation
class HomePage extends StatelessWidget {
  const HomePage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text("Page d'accueil")),
      body: Center(
        child: ElevatedButton(
          onPressed: () {
            Navigator.of(context).push(_createRoute());
          },
          child: const Text('Aller √† la page suivante'),
        ),
      ),
    );
  }

  /// üåà Cr√©ation d'une route personnalis√©e
  Route _createRoute() {
    return PageRouteBuilder(
      pageBuilder: (context, animation, secondaryAnimation) =>
          const SecondPage(),
      transitionDuration: const Duration(milliseconds: 600), // ‚è±Ô∏è Dur√©e de la transition
      reverseTransitionDuration: const Duration(milliseconds: 400),

      transitionsBuilder: (context, animation, secondaryAnimation, child) {
        // Exemple 1 : Slide transition
        const begin = Offset(1.0, 0.0); // Commence √† droite
        const end = Offset.zero;
        const curve = Curves.ease;

        final tween = Tween(begin: begin, end: end).chain(
          CurveTween(curve: curve),
        );

        return SlideTransition(
          position: animation.drive(tween),
          child: child,
        );

        // Exemple 2 : Fade transition
        // return FadeTransition(opacity: animation, child: child);

        // Exemple 3 : Scale transition
        // return ScaleTransition(scale: animation, child: child);
      },
    );
  }
}

/// üß≠ Deuxi√®me page √† afficher
class SecondPage extends StatelessWidget {
  const SecondPage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text("Deuxi√®me Page")),
      body: Center(
        child: ElevatedButton(
          onPressed: () => Navigator.pop(context),
          child: const Text('Retour'),
        ),
      ),
    );
  }
}
```

---

## üîç Explication

| √âl√©ment                   | Description                                                 |
| ------------------------- | ----------------------------------------------------------- |
| `PageRouteBuilder`        | Cr√©e une route personnalis√©e au lieu de `MaterialPageRoute` |
| `pageBuilder`             | Retourne le widget de destination                           |
| `transitionsBuilder`      | D√©finit la transition visuelle entre les pages              |
| `animation` / `secondary` | Valeurs d‚Äôanimation utilis√©es pour construire l‚Äôeffet       |
| `SlideTransition`         | Applique un glissement de droite √† gauche                   |
| `FadeTransition`          | Applique une animation de fondu (opacit√©)                   |
| `ScaleTransition`         | Applique un effet de zoom/agrandissement                    |

---

### üîÑ Tu peux remplacer `SlideTransition` par d'autres effets :

```dart
// Fade
return FadeTransition(opacity: animation, child: child);

// Zoom
return ScaleTransition(scale: animation, child: child);

// Rotation
return RotationTransition(turns: animation, child: child);
```