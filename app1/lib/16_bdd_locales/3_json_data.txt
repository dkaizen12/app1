## üì¶ Objectif
Charger localement un fichier JSON (ex : `data.json`) depuis le dossier de documents de l‚Äôapplication, puis **le d√©coder en objets Dart** utilisables dans ton app.

## üß∞ Outils n√©cessaires

* `dart:io` ‚Üí pour acc√©der au fichier
* `dart:convert` ‚Üí pour d√©coder le JSON (`jsonDecode`)
* `path_provider` ‚Üí pour acc√©der au bon chemin (documents directory)

---

## üß™ Extrait de code explicatif

```dart
import 'dart:io'; // Fichier
import 'dart:convert'; // jsonDecode()
import 'package:path_provider/path_provider.dart'; // getApplicationDocumentsDirectory

// Mod√®le simple pour une publication
class Post {
  final String title;
  final String author;
  final String content;

  Post({required this.title, required this.author, required this.content});

  // Convertir une Map JSON en Post
  factory Post.fromJson(Map<String, dynamic> json) {
    return Post(
      title: json['title'],
      author: json['author'],
      content: json['content'],
    );
  }
}

Future<void> readPostsFromFile() async {
  // 1. Obtenir le r√©pertoire local de l‚Äôapp
  final directory = await getApplicationDocumentsDirectory();

  // 2. Cr√©er l‚Äôinstance du fichier data.json
  final file = File('${directory.path}/data.json');

  // 3. Lire le contenu en tant que String
  final contenu = await file.readAsString();

  // 4. D√©coder le contenu JSON en List<Map>
  final List<dynamic> jsonList = jsonDecode(contenu);

  // 5. Transformer en liste d‚Äôobjets Post
  final List<Post> posts = jsonList.map((json) => Post.fromJson(json)).toList();

  // 6. Utilisation
  for (var post in posts) {
    print('üìÑ ${post.title} par ${post.author}');
  }
}
```

---

## üìÅ Exemple de contenu du fichier `data.json`

Voici un exemple simul√© de fichier JSON que tu peux √©crire dans `/data.json` pour tester :

```json
[
  {
    "title": "Kinshasa by Night",
    "author": "user243",
    "content": "Une balade nocturne dans la capitale..."
  },
  {
    "title": "March√© Central",
    "author": "mamaYaya",
    "content": "Plong√©e au c≈ìur du commerce kino-congolais."
  },
  {
    "title": "Musique urbaine",
    "author": "beatmakerCD",
    "content": "L‚Äôinfluence du ndombolo chez les jeunes."
  }
]
```
---

## üîÉ Tu peux aussi √©crire ce fichier JSON en local avec `writeAsString`

```dart
Future<void> writeDummyPosts() async {
  final directory = await getApplicationDocumentsDirectory();
  final file = File('${directory.path}/data.json');

  final dummyPosts = [
    {
      "title": "Balade √† Bandal",
      "author": "jojoKin",
      "content": "Entre chikwangues et ambiance locale."
    },
    {
      "title": "Les taxis de Kin",
      "author": "germainCD",
      "content": "Un vrai chaos organis√© !"
    }
  ];

  final jsonString = jsonEncode(dummyPosts);
  await file.writeAsString(jsonString);
}
```

---

## ‚úÖ R√©sum√© des fonctions utilis√©es

| Fonction / classe                    | Description                                        |
| ------------------------------------ | -------------------------------------------------- |
| `getApplicationDocumentsDirectory()` | Acc√®de au dossier priv√© local √† l‚Äôapplication      |
| `File(path)`                         | Repr√©sente un fichier local (√† lire ou √©crire)     |
| `readAsString()`                     | Lit le fichier comme une cha√Æne texte              |
| `jsonDecode()`                       | Transforme une cha√Æne JSON en `List`, `Map`, etc.  |
| `jsonEncode()`                       | (optionnel) S√©rialise un objet Dart en JSON        |
| `writeAsString()`                    | √âcrit une cha√Æne (souvent du JSON) dans le fichier |

---
